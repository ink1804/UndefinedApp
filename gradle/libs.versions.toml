[versions]
gradle = "8.0.2"
kotlin = "1.8.21"
google_services = "4.3.15"

# Google
googleMaps = "18.1.0"
googleMapsSecrets = "2.0.1"
# Android
androidxKtx = "1.7.0"
androidxFragment = "1.5.5"
androidxTransition = "1.4.1"

# Compose
compose = "1.4.3"
composeActivity = "1.7.2"
composeLifecycleViewmodel = "2.6.1"
composeMaterialThemeAdapter = "1.2.1"
composeConstraintlayout = "1.0.1"
composeNavigation = "2.6.0"
composeAccompanist = "0.30.1"
composeMaps = '2.11.4'

# Coroutines
coroutines = "1.7.1"

# DI
dagger = "2.45"
koin = "3.2.0"

# Navigation
cicerone = "7.1"

# Log
timber = "5.0.1"

# Network
ktor = "2.3.1"
kotlinSerialization = "1.5.1"
okhttp = "4.10.0"
chucker = "3.5.2"

# Test
kotest = "5.4.0"
mockk = "1.12.4"
kaspresso = "1.5.2"


[libraries]
gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
kotlinGradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
googleServicesGradle = { module = "com.google.gms:google-services", version.ref = "google_services" }
kotlinSerializationGradle = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }

# Google
googleServicesMaps = { module = "com.google.android.gms:play-services-maps", version.ref = "googleMaps" }

# DI
koinLib = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koinAndroidLib = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koinComposeLib = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koinViewModelLib = { module = "io.insert-koin:koin-androidx-viewmodel", version.ref = "koin" }

#implementation "io.insert-koin:koin-androidx-scope:$koin_version"
#implementation "io.insert-koin:koin-androidx-fragment:$koin_version"
#implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
#implementation "io.insert-koin:koin-androidx-ext:$koin_version"

# Navigation
ciceroneLib = { module = "com.github.terrakok:cicerone", version.ref = "cicerone" }

# Log
timberLib = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Network
ktorCoreLib = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorDarwinLib = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktorOkhttpLib = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktorNegotiationLib = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktorSerializationLib = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

kotlinSerializationLib = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinSerialization" }

okhttpLoggingLib = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

chuckerLib = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
chuckerNoOpLib = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker" }


# Compose
composeUiLib = { module = "androidx.compose.ui:ui", version.ref = "compose" }
composeMaterialLib = { module = "androidx.compose.material:material", version.ref = "compose" }
composeUiToolingPreviewLib = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
composeUiToolingLib = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
composeAnimationLib = { module = "androidx.compose.animation:animation", version.ref = "compose" }
composeRuntimeLib = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
composeRuntimeLivedataLib = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }
composeLifecycleViewmodelLib = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "composeLifecycleViewmodel" }
composeMaterialThemeAdapterLib = { module = "com.google.android.material:compose-theme-adapter", version.ref = "composeMaterialThemeAdapter" }
composeActivityLib = { module = "androidx.activity:activity-compose", version.ref = "composeActivity" }
composeConstraintlayoutLib = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "composeConstraintlayout" }
composeNavigationLib = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
composeAccompanistLib = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "composeAccompanist" }
composeMapsLib = { module = "com.google.maps.android:maps-compose", version.ref = "composeMaps" }

# Coroutines
kotlinCoroutinesLib = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinCoroutinesCoreLib = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

# Unit Test
kotestAssertionsLib = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
kotestRunnerJunitLib = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotestPropertyJvmLib = { module = "io.kotest:kotest-property-jvm", version.ref = "kotest" }
mockkLib = { module = "io.mockk:mockk", version.ref = "mockk" }

# Ui Test
kaspressoLib = { module = "com.kaspersky.android-components:kaspresso", version.ref = "kaspresso" }
kaspressoAllureSupportLib = { module = "com.kaspersky.android-components:kaspresso-allure-support", version.ref = "kaspresso" }
kaspressoComposeSupportLib = { module = "com.kaspersky.android-components:kaspresso-compose-support", version.ref = "kaspresso" }

[plugins]
googleMapsSecretsPlugin = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "googleMapsSecrets" }